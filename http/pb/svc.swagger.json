{
  "swagger": "2.0",
  "info": {
    "title": "JWTIS service",
    "version": "0.1.1",
    "contact": {
      "name": "JWTIS",
      "url": "https://github.com/karantin2020/jwtis"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/newjwt": {
      "post": {
        "summary": "Summary: New JWT token",
        "description": "Issue new JWT token",
        "operationId": "NewJWT",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/jwtispbTokenResponse"
            }
          },
          "400": {
            "description": "Returned when invalid request data sent",
            "schema": {}
          },
          "404": {
            "description": "Returned when crypto keys not found",
            "schema": {}
          },
          "500": {
            "description": "Returned when internal server error have got",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/jwtispbNewTokenRequest"
            }
          }
        ],
        "tags": [
          "JWTIS"
        ]
      }
    },
    "/renewjwt": {
      "post": {
        "summary": "Summary: Renew JWT token",
        "description": "Renew JWT token",
        "operationId": "RenewJWT",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/jwtispbTokenResponse"
            }
          },
          "403": {
            "description": "Returned when invalid crypto primitives exist",
            "schema": {}
          },
          "404": {
            "description": "Returned when crypto keys not found",
            "schema": {}
          },
          "409": {
            "description": "Returned when refresh token expired",
            "schema": {}
          },
          "422": {
            "description": "Returned when invalid refresh claims sent",
            "schema": {}
          },
          "500": {
            "description": "Returned when internal server error have got",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/jwtispbRenewTokenRequest"
            }
          }
        ],
        "tags": [
          "JWTIS"
        ]
      }
    }
  },
  "definitions": {
    "jwtispbNewTokenRequest": {
      "type": "object",
      "properties": {
        "kid": {
          "type": "string"
        },
        "claims": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "jwtispbRenewTokenRequest": {
      "type": "object",
      "properties": {
        "kid": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "refreshStrategy": {
          "type": "string"
        }
      }
    },
    "jwtispbTokenResponse": {
      "type": "object",
      "properties": {
        "iD": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "expiry": {
          "type": "string",
          "format": "int64"
        }
      }
    }
  }
}
